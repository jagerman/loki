From: Jason Rhinelander <jason@imaginary.ca>
Date: Sun, 5 May 2019 01:27:17 -0300
Subject: Make loki build and install shared libs

Patch the loki cmake files to properly build and install shared libs.
---
 CMakeLists.txt              | 17 +++++++++++++++--
 contrib/epee/CMakeLists.txt |  5 +++++
 external/CMakeLists.txt     |  8 +++++++-
 src/CMakeLists.txt          |  6 +++++-
 4 files changed, 32 insertions(+), 4 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 5415225..fca23ef 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -53,7 +53,7 @@ if(CCACHE_PROGRAM)
   endforeach()
 endif()
 
-cmake_minimum_required(VERSION 3.10)
+cmake_minimum_required(VERSION 3.13)
 message(STATUS "CMake version ${CMAKE_VERSION}")
 
 project(loki
@@ -332,7 +332,9 @@ endif()
 # elseif(CMAKE_SYSTEM_NAME MATCHES ".*BSDI.*")
 #   set(BSDI TRUE)
 
-include_directories(external/rapidjson/include src external)
+include(Version)
+
+include_directories(external/rapidjson/include src contrib/epee/include external)
 
 if(APPLE)
   include_directories(SYSTEM /usr/include/malloc)
@@ -944,6 +946,17 @@ if(BUILD_DOCUMENTATION)
   endif()
 endif()
 
+set(lokilibs epee blockchain_db checkpoints common cncrypto cryptonote_basic
+        cryptonote_core cryptonote_protocol device device_trezor lmdb_lib mnemonics
+        multisig net p2p ringct_basic ringct
+        rpc_server_base rpc rpc_http_client rpc_commands daemon_messages daemon_rpc_server
+        serialization wallet easylogging lmdb randomx blocks version)
+install(TARGETS ${lokilibs}
+    ARCHIVE DESTINATION lib${LOKI_INSTALL_LIBDIR_SUFFIX}
+    LIBRARY DESTINATION lib${LOKI_INSTALL_LIBDIR_SUFFIX})
+set_target_properties(${lokilibs} PROPERTIES
+    VERSION "${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}")
+
 # when ON - will install libwallet_merged into "lib"
 option(BUILD_GUI_DEPS "Build GUI dependencies." OFF)
 
diff --git a/contrib/epee/CMakeLists.txt b/contrib/epee/CMakeLists.txt
index 035b24b..357984d 100644
--- a/contrib/epee/CMakeLists.txt
+++ b/contrib/epee/CMakeLists.txt
@@ -28,3 +28,8 @@
 
 add_subdirectory(src)
 
+install(
+    DIRECTORY include/
+    DESTINATION include${LOKI_INSTALL_INCLUDEDIR_SUFFIX}
+    COMPONENT development
+    FILES_MATCHING PATTERN "*.h" PATTERN "*.inl")
diff --git a/external/CMakeLists.txt b/external/CMakeLists.txt
index a66d343..9650285 100644
--- a/external/CMakeLists.txt
+++ b/external/CMakeLists.txt
@@ -61,7 +61,7 @@ endif()
 
 
 if(NOT LOKIMQ_FOUND)
-  message(STATUS "Using in-tree lokimq")
+  message(FATAL_ERROR "Using in-tree lokimq")
   if (DEPENDS)
     # The depends system builds a static libzmq so set up a target loki-mq can use to avoid building
     add_library(libzmq STATIC IMPORTED GLOBAL)
@@ -91,6 +91,12 @@ add_subdirectory(db_drivers)
 add_subdirectory(easylogging++)
 add_subdirectory(randomx EXCLUDE_FROM_ALL)
 
+install(
+  DIRECTORY boost
+  DESTINATION include${LOKI_INSTALL_INCLUDEDIR_SUFFIX}
+  COMPONENT   development
+  FILES_MATCHING PATTERN "*.hpp")
+
 # uSockets doesn't really have a proper build system (just a very simple Makefile) so build it
 # ourselves.
 if (NOT CMAKE_VERSION VERSION_LESS 3.12)
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index bff4259..45c2f16 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -58,7 +58,6 @@ function (loki_add_executable target binary)
   set_property(GLOBAL PROPERTY loki_executable_targets "${exec_tgt}")
 endfunction ()
 
-include(Version)
 add_library(version ${CMAKE_BINARY_DIR}/version.cpp)
 add_dependencies(version genversion)
 
@@ -106,3 +105,8 @@ endif()
 
 add_subdirectory(device)
 add_subdirectory(device_trezor)
+
+install(
+    DIRECTORY   "${CMAKE_CURRENT_SOURCE_DIR}/"
+    DESTINATION "include${LOKI_INSTALL_INCLUDEDIR_SUFFIX}"
+    FILES_MATCHING PATTERN "*.h" PATTERN "*.hpp")
