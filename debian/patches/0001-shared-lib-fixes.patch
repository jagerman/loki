From: Jason Rhinelander <jason@imaginary.ca>
Date: Sun, 5 May 2019 01:27:17 -0300
Subject: Make loki build and install shared libs

Patch the loki cmake files to properly build and install shared libs.
---
 CMakeLists.txt                             |  2 ++
 cmake/Version.cmake                        |  9 +++++++++
 contrib/epee/CMakeLists.txt                |  5 +++++
 contrib/epee/src/CMakeLists.txt            | 15 +++++++++++++--
 external/CMakeLists.txt                    |  6 ++++++
 external/db_drivers/liblmdb/CMakeLists.txt | 12 ++++++++++--
 external/easylogging++/CMakeLists.txt      | 10 ++++++++--
 src/CMakeLists.txt                         | 23 ++++++++++++++---------
 src/blockchain_db/CMakeLists.txt           |  2 +-
 src/common/CMakeLists.txt                  |  2 +-
 src/wallet/api/CMakeLists.txt              | 11 +++++++----
 11 files changed, 76 insertions(+), 21 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index ff0fd07..2441537 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -292,6 +292,8 @@ endif()
 # elseif(CMAKE_SYSTEM_NAME MATCHES ".*BSDI.*")
 #   set(BSDI TRUE)
 
+include(Version)
+
 include_directories(external/rapidjson/include external/easylogging++ src contrib/epee/include external/cppzmq external)
 
 if(APPLE)
diff --git a/cmake/Version.cmake b/cmake/Version.cmake
index 4042bc6..9e4ad65 100644
--- a/cmake/Version.cmake
+++ b/cmake/Version.cmake
@@ -51,3 +51,12 @@ else()
 endif ()
 add_custom_target(genversion ALL
   DEPENDS "${CMAKE_BINARY_DIR}/version.cpp")
+
+
+file(STRINGS "${CMAKE_SOURCE_DIR}/src/version.cpp.in" loki_version_defines
+    REGEX "#define DEF_LOKI_VERSION_(MAJOR|MINOR|PATCH) ")
+foreach(ver ${loki_version_defines})
+  if(ver MATCHES "#define DEF_LOKI_VERSION_(MAJOR|MINOR|PATCH) +([0-9]+)$")
+    set(LOKI_VERSION_${CMAKE_MATCH_1} "${CMAKE_MATCH_2}" CACHE INTERNAL "")
+  endif()
+endforeach()
diff --git a/contrib/epee/CMakeLists.txt b/contrib/epee/CMakeLists.txt
index 035b24b..357984d 100644
--- a/contrib/epee/CMakeLists.txt
+++ b/contrib/epee/CMakeLists.txt
@@ -28,3 +28,8 @@
 
 add_subdirectory(src)
 
+install(
+    DIRECTORY include/
+    DESTINATION include${LOKI_INSTALL_INCLUDEDIR_SUFFIX}
+    COMPONENT development
+    FILES_MATCHING PATTERN "*.h" PATTERN "*.inl")
diff --git a/contrib/epee/src/CMakeLists.txt b/contrib/epee/src/CMakeLists.txt
index 88c511d..ff0589b 100644
--- a/contrib/epee/src/CMakeLists.txt
+++ b/contrib/epee/src/CMakeLists.txt
@@ -26,11 +26,22 @@
 # STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF
 # THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
-add_library(epee STATIC hex.cpp http_auth.cpp mlog.cpp net_helper.cpp net_utils_base.cpp string_tools.cpp wipeable_string.cpp memwipe.c
+add_library(epee hex.cpp http_auth.cpp mlog.cpp net_helper.cpp net_utils_base.cpp string_tools.cpp wipeable_string.cpp memwipe.c
     connection_basic.cpp network_throttle.cpp network_throttle-detail.cpp mlocker.cpp buffer.cpp net_ssl.cpp)
 
+install(TARGETS epee
+    ARCHIVE DESTINATION lib${LOKI_INSTALL_LIBDIR_SUFFIX}
+    LIBRARY DESTINATION lib${LOKI_INSTALL_LIBDIR_SUFFIX})
+set_target_properties(epee PROPERTIES
+  VERSION "${LOKI_VERSION_MAJOR}.${LOKI_VERSION_MINOR}.${LOKI_VERSION_PATCH}")
+
 if (USE_READLINE AND GNU_READLINE_FOUND)
-  add_library(epee_readline STATIC readline_buffer.cpp)
+  add_library(epee_readline readline_buffer.cpp)
+  install(TARGETS epee_readline
+    ARCHIVE DESTINATION lib${LOKI_INSTALL_LIBDIR_SUFFIX}
+    LIBRARY DESTINATION lib${LOKI_INSTALL_LIBDIR_SUFFIX})
+  set_target_properties(epee_readline PROPERTIES
+    VERSION "${LOKI_VERSION_MAJOR}.${LOKI_VERSION_MINOR}.${LOKI_VERSION_PATCH}")
 endif()
 
 if(HAVE_C11)
diff --git a/external/CMakeLists.txt b/external/CMakeLists.txt
index 06d60d1..dd449a6 100644
--- a/external/CMakeLists.txt
+++ b/external/CMakeLists.txt
@@ -81,3 +81,9 @@ endif()
 add_subdirectory(db_drivers)
 add_subdirectory(easylogging++)
 add_subdirectory(randomx EXCLUDE_FROM_ALL)
+
+install(
+  DIRECTORY boost
+  DESTINATION include${LOKI_INSTALL_INCLUDEDIR_SUFFIX}
+  COMPONENT   development
+  FILES_MATCHING PATTERN "*.hpp")
diff --git a/external/db_drivers/liblmdb/CMakeLists.txt b/external/db_drivers/liblmdb/CMakeLists.txt
index 2e8822f..0f5b01c 100644
--- a/external/db_drivers/liblmdb/CMakeLists.txt
+++ b/external/db_drivers/liblmdb/CMakeLists.txt
@@ -52,14 +52,22 @@ if(${ARCH_WIDTH} EQUAL 32)
 endif()
 
 # GUI/libwallet install target
-if (BUILD_GUI_DEPS)
+if (BUILD_GUI_DEPS OR BUILD_SHARED_LIBS)
     if(IOS)
         set(lib_folder lib-${ARCH})
     else()
-        set(lib_folder lib)
+        set(lib_folder lib${LOKI_INSTALL_LIBDIR_SUFFIX})
     endif()
     install(TARGETS lmdb
         ARCHIVE DESTINATION ${lib_folder}
         LIBRARY DESTINATION ${lib_folder})
 endif()
 set_property(TARGET lmdb APPEND PROPERTY COMPILE_FLAGS "-fPIC")
+
+set_target_properties(lmdb PROPERTIES
+  VERSION "${LOKI_VERSION_MAJOR}.${LOKI_VERSION_MINOR}.${LOKI_VERSION_PATCH}")
+install(
+  DIRECTORY .
+  DESTINATION include${LOKI_INSTALL_INCLUDEDIR_SUFFIX}/liblmdb
+  COMPONENT   development
+  FILES_MATCHING PATTERN "*.h")
diff --git a/external/easylogging++/CMakeLists.txt b/external/easylogging++/CMakeLists.txt
index 72d007a..423a1a3 100644
--- a/external/easylogging++/CMakeLists.txt
+++ b/external/easylogging++/CMakeLists.txt
@@ -46,11 +46,11 @@ target_link_libraries(easylogging
     ${Backtrace_LIBRARIES})
 
 # GUI/libwallet install target
-if (BUILD_GUI_DEPS)
+if (BUILD_GUI_DEPS OR BUILD_SHARED_LIBS)
     if(IOS)
         set(lib_folder lib-${ARCH})
     else()
-        set(lib_folder lib)
+        set(lib_folder lib${LOKI_INSTALL_LIBDIR_SUFFIX})
     endif()
     install(TARGETS easylogging
         ARCHIVE DESTINATION ${lib_folder}
@@ -58,3 +58,9 @@ if (BUILD_GUI_DEPS)
 endif()
 set_property(TARGET easylogging APPEND PROPERTY COMPILE_FLAGS "-fPIC")
 
+set_target_properties(easylogging PROPERTIES
+  VERSION "${LOKI_VERSION_MAJOR}.${LOKI_VERSION_MINOR}.${LOKI_VERSION_PATCH}")
+install(
+    FILES easylogging++.h ea_config.h
+    DESTINATION include${LOKI_INSTALL_INCLUDEDIR_SUFFIX}
+    COMPONENT development)
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 21e7a99..11e9855 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -46,13 +46,6 @@ function (loki_private_headers group)
       ${ARGN})
 endfunction ()
 
-function (loki_install_headers subdir)
-  install(
-    FILES       ${ARGN}
-    DESTINATION "include/${subdir}"
-    COMPONENT   development)
-endfunction ()
-
 function (enable_stack_trace target)
   if(STACK_TRACE)
     set_property(TARGET ${target}
@@ -88,7 +81,7 @@ function (loki_add_library name)
 endfunction()
 
 function (loki_add_library_with_deps)
-  cmake_parse_arguments(LOKI_ADD_LIBRARY "" "NAME" "DEPENDS;SOURCES" ${ARGN})
+  cmake_parse_arguments(LOKI_ADD_LIBRARY "NO_INSTALL" "NAME" "DEPENDS;SOURCES" ${ARGN})
   source_group("${LOKI_ADD_LIBRARY_NAME}" FILES ${LOKI_ADD_LIBRARY_SOURCES})
 
   # Define a ("virtual") object library and an actual library that links those
@@ -104,9 +97,16 @@ function (loki_add_library_with_deps)
   set_property(TARGET "${LOKI_ADD_LIBRARY_NAME}" PROPERTY FOLDER "libs")
   target_compile_definitions(${objlib}
     PRIVATE $<TARGET_PROPERTY:${LOKI_ADD_LIBRARY_NAME},INTERFACE_COMPILE_DEFINITIONS>)
+
+  set_target_properties("${LOKI_ADD_LIBRARY_NAME}" PROPERTIES
+    VERSION "${LOKI_VERSION_MAJOR}.${LOKI_VERSION_MINOR}.${LOKI_VERSION_PATCH}")
+  if(NOT LOKI_ADD_LIBRARY_NO_INSTALL)
+    install(TARGETS "${LOKI_ADD_LIBRARY_NAME}"
+      ARCHIVE DESTINATION lib${LOKI_INSTALL_LIBDIR_SUFFIX}
+      LIBRARY DESTINATION lib${LOKI_INSTALL_LIBDIR_SUFFIX})
+  endif()
 endfunction ()
 
-include(Version)
 loki_add_library(version SOURCES ${CMAKE_BINARY_DIR}/version.cpp DEPENDS genversion)
 
 add_subdirectory(common)
@@ -148,3 +148,8 @@ endif()
 
 add_subdirectory(device)
 add_subdirectory(device_trezor)
+
+install(
+    DIRECTORY   "${CMAKE_CURRENT_SOURCE_DIR}/"
+    DESTINATION "include${LOKI_INSTALL_INCLUDEDIR_SUFFIX}"
+    FILES_MATCHING PATTERN "*.h" PATTERN "*.hpp")
diff --git a/src/blockchain_db/CMakeLists.txt b/src/blockchain_db/CMakeLists.txt
index c258330..08b63a8 100644
--- a/src/blockchain_db/CMakeLists.txt
+++ b/src/blockchain_db/CMakeLists.txt
@@ -55,7 +55,7 @@ if (BERKELEY_DB)
 endif()
 
 loki_private_headers(blockchain_db
-  ${crypto_private_headers})
+  ${blockchain_db_private_headers})
 loki_add_library(blockchain_db
   ${blockchain_db_sources}
   ${blockchain_db_headers}
diff --git a/src/common/CMakeLists.txt b/src/common/CMakeLists.txt
index b6cdc68..925f93d 100644
--- a/src/common/CMakeLists.txt
+++ b/src/common/CMakeLists.txt
@@ -112,9 +112,9 @@ target_link_libraries(common
     ${Boost_THREAD_LIBRARY}
     ${Boost_REGEX_LIBRARY}
     ${Boost_CHRONO_LIBRARY}
-  PRIVATE
     ${OPENSSL_LIBRARIES}
     ${EPEE_READLINE}
+  PRIVATE
     ${EXTRA_LIBRARIES})
 
 #monero_install_headers(common
diff --git a/src/wallet/api/CMakeLists.txt b/src/wallet/api/CMakeLists.txt
index d88f0c9..e5ea262 100644
--- a/src/wallet/api/CMakeLists.txt
+++ b/src/wallet/api/CMakeLists.txt
@@ -63,7 +63,8 @@ loki_private_headers(wallet_api
 loki_add_library(wallet_api
   ${wallet_api_sources}
   ${wallet_api_headers}
-  ${wallet_api_private_headers})
+  ${wallet_api_private_headers}
+  NO_INSTALL)
 target_link_libraries(wallet_api
   PUBLIC
     wallet
@@ -86,8 +87,10 @@ set_property(TARGET obj_wallet_api PROPERTY EXCLUDE_FROM_ALL TRUE)
 if(IOS)
     set(lib_folder lib-${ARCH})
 else()
-    set(lib_folder lib)
+    set(lib_folder lib${LOKI_INSTALL_LIBDIR_SUFFIX})
 endif()
 
-install(FILES ${wallet_api_headers}
-    DESTINATION include/wallet/api)
+install(TARGETS wallet_api
+  ARCHIVE DESTINATION ${lib_folder}
+  LIBRARY DESTINATION ${lib_folder}
+  EXCLUDE_FROM_ALL)
