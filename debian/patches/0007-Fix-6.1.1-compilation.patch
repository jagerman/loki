From: Jason Rhinelander <jason@imaginary.ca>
Date: Tue, 7 Jan 2020 14:03:20 -0400
Subject: Fix 6.1.1 compilation

`tools::wallet2::rpc_long_poll_timeout` was a static member declaration
without a definition, which isn't allowed before C++17 (although can
work depending on compiler optimizations).  Adding the definition in
wallet2.cpp isn't really an option (it would make core depend on the
wallet), so just move it to a constexpr static global (which is allowed
without a definition, even before C++17) in `rpc/` instead.
---
 src/rpc/core_rpc_server.cpp      | 3 +--
 src/rpc/core_rpc_server.h        | 2 ++
 src/wallet/wallet2.cpp           | 3 ++-
 src/wallet/wallet2.h             | 1 -
 src/wallet/wallet_rpc_server.cpp | 3 ++-
 5 files changed, 7 insertions(+), 5 deletions(-)

diff --git a/src/rpc/core_rpc_server.cpp b/src/rpc/core_rpc_server.cpp
index 18bbafe..1e76968 100644
--- a/src/rpc/core_rpc_server.cpp
+++ b/src/rpc/core_rpc_server.cpp
@@ -58,7 +58,6 @@ using namespace epee;
 #include "core_rpc_server_error_codes.h"
 #include "p2p/net_node.h"
 #include "version.h"
-#include "wallet/wallet2.h"
 
 #undef LOKI_DEFAULT_LOG_CATEGORY
 #define LOKI_DEFAULT_LOG_CATEGORY "daemon.rpc"
@@ -1151,7 +1150,7 @@ namespace cryptonote
         }
 
         m_long_poll_active_connections++;
-        bool condition_activated = m_core.m_long_poll_wake_up_clients.wait_for(lock, tools::wallet2::rpc_long_poll_timeout, [this, tx_count_before]() {
+        bool condition_activated = m_core.m_long_poll_wake_up_clients.wait_for(lock, rpc_long_poll_timeout, [this, tx_count_before]() {
               size_t tx_count_after = m_core.get_pool().get_transactions_count();
               return tx_count_before != tx_count_after;
             });
diff --git a/src/rpc/core_rpc_server.h b/src/rpc/core_rpc_server.h
index 8e85db6..5e9a2af 100644
--- a/src/rpc/core_rpc_server.h
+++ b/src/rpc/core_rpc_server.h
@@ -53,6 +53,8 @@ using namespace epee;
 
 namespace cryptonote
 {
+  static constexpr auto rpc_long_poll_timeout = 15s;
+
   /************************************************************************/
   /*                                                                      */
   /************************************************************************/
diff --git a/src/wallet/wallet2.cpp b/src/wallet/wallet2.cpp
index a77e3d2..1c05e85 100644
--- a/src/wallet/wallet2.cpp
+++ b/src/wallet/wallet2.cpp
@@ -48,6 +48,7 @@ using namespace epee;
 #include "wallet2.h"
 #include "cryptonote_basic/cryptonote_format_utils.h"
 #include "rpc/core_rpc_server_commands_defs.h"
+#include "rpc/core_rpc_server.h"
 #include "misc_language.h"
 #include "cryptonote_basic/cryptonote_basic_impl.h"
 #include "multisig/multisig.h"
@@ -2873,7 +2874,7 @@ bool wallet2::long_poll_pool_state()
   bool r               = false;
   {
     std::lock_guard<decltype(m_long_poll_mutex)> lock(m_long_poll_mutex);
-    r = epee::net_utils::invoke_http_json("/get_transaction_pool_hashes.bin", req, res, m_long_poll_client, rpc_long_poll_timeout, "GET");
+    r = epee::net_utils::invoke_http_json("/get_transaction_pool_hashes.bin", req, res, m_long_poll_client, cryptonote::rpc_long_poll_timeout, "GET");
   }
   THROW_WALLET_EXCEPTION_IF(!r, error::no_connection_to_daemon, "get_transaction_pool_hashes.bin");
   THROW_WALLET_EXCEPTION_IF(res.status == CORE_RPC_STATUS_BUSY, error::daemon_busy, "get_transaction_pool_hashes.bin");
diff --git a/src/wallet/wallet2.h b/src/wallet/wallet2.h
index 135de3a..1a251f5 100644
--- a/src/wallet/wallet2.h
+++ b/src/wallet/wallet2.h
@@ -314,7 +314,6 @@ private:
   public:
     static constexpr uint32_t BLINK_PRIORITY = 0x626c6e6b; // "blnk"
     static constexpr const std::chrono::seconds rpc_timeout = std::chrono::minutes(3) + std::chrono::seconds(30);
-    static constexpr const auto rpc_long_poll_timeout       = std::chrono::seconds(15);
 
     enum RefreshType {
       RefreshFull,
diff --git a/src/wallet/wallet_rpc_server.cpp b/src/wallet/wallet_rpc_server.cpp
index 3efc6ca..0bca569 100644
--- a/src/wallet/wallet_rpc_server.cpp
+++ b/src/wallet/wallet_rpc_server.cpp
@@ -53,6 +53,7 @@ using namespace epee;
 #include "mnemonics/electrum-words.h"
 #include "rpc/rpc_args.h"
 #include "rpc/core_rpc_server_commands_defs.h"
+#include "rpc/core_rpc_server.h"
 #include "daemonizer/daemonizer.h"
 
 #undef LOKI_DEFAULT_LOG_CATEGORY
@@ -144,7 +145,7 @@ namespace tools
           // NOTE: Don't care about error, non fatal.
         }
         return true;
-    }, tools::wallet2::rpc_long_poll_timeout.count());
+    }, cryptonote::rpc_long_poll_timeout.count());
 
     //DO NOT START THIS SERVER IN MORE THEN 1 THREADS WITHOUT REFACTORING
     return epee::http_server_impl_base<wallet_rpc_server, connection_context>::run(1, true);
